# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '771f916b-34b3-473f-94dc-6c9f547c1d65'
  imageRepository: 'dconchamzindicatorsapitest'
  containerRegistry: 'indicatorsservice.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: NodeTool@0
      inputs:
       versionSpec: '10.x'
       displayName: 'Install Node.js'
    - script: |
        npm install
      displayName: 'npm install and build'   
    - task: Npm@1
      inputs:
       command: custom
       customCommand: 'run test'
      displayName: Run Tests
    - task: PublishTestResults@2
      inputs: 
       testResultsFormat: 'Junit'
       testResultsFiles: '$(System.DefaultWorkingDirectory)/test-report.xml'
       mergeTestResults: true
      displayName: Publish test results
    - task: PublishCodeCoverageResults@1
      inputs:
       codeCoverageTool: Cobertura
       summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml
       failIfCoverageEmpty: true
      displayName: Publish code coverage results
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifact: 'indicatorService'
        publishLocation: 'pipeline'
